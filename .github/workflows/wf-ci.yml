name: wf-ci

env:
  DOCKERHUB_ID: 'armck'


on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


defaults:
  run:
    shell: bash

jobs:
  setup-env:
    runs-on: ubuntu-24.04
    outputs:
      dockerhub_id: ${{ steps.env.outputs.dockerhub_id }}
    steps:
      - name: Setup environment variables
        id: env
        run: |
          echo "dockerhub_id=$DOCKERHUB_ID" >> "$GITHUB_OUTPUT"
  
  container-build-and-push:
    uses: armckinney/cicd/.github/workflows/rwf-container-build-and-push.yaml@main
    needs: setup-env
    with:
      dockerhub_id: ${{ needs.setup-env.outputs.dockerhub_id }}
    secrets:
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    needs: container-build-and-push
    container:
      image: armck/data-structures-and-algorithms:${{ github.sha }}
      credentials:
        username: ${{ secrets.DOCKER_HUB_ID }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        poetry install
        poetry show

    - name: Lint with flake8
      run: |
        poetry run flake8

    - name: Link with mypy
      run: |
        poetry run mypy .

  test:
    runs-on: ubuntu-latest
    needs: container-build-and-push
    container:
      image: armck/data-structures-and-algorithms:${{ github.sha }}
      credentials:
        username: ${{ secrets.DOCKER_HUB_ID }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        poetry install
        poetry show

    - name: Test with Pytest
      run: |
        poetry run pytest
